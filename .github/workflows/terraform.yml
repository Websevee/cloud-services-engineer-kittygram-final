name: Terraform Workflow
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        type: choice
        required: true
        default: 'plan'
        options:
          - plan
          - apply
          - destroy 
jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.8.3

    - name: Set up Yandex Cloud service account key
      working-directory: ./infra
      run: |
        echo "${{ secrets.YC_KEY_JSON }}" | base64 -d > ./authorized_key.json

    - name: Initialize Terraform
      working-directory: ./infra
      run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"
      env:
        ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        TF_VAR_ssh_key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        TF_VAR_cloud_id: ${{ secrets.YANDEX_CLOUD_ID }}
        TF_VAR_folder_id: ${{ secrets.YANDEX_FOLDER_ID }}

    - name: Terraform Plan
      working-directory: ./infra
      if: ${{ github.event.inputs.action == 'plan' }}
      run: terraform plan
      env:
        ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        TF_VAR_ssh_key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        TF_VAR_cloud_id: ${{ secrets.YANDEX_CLOUD_ID }}
        TF_VAR_folder_id: ${{ secrets.YANDEX_FOLDER_ID }}

### Добавьте сюда стадии для apply и destroy
    - name: Terraform Apply
      working-directory: ./infra
      if: ${{ github.event.inputs.action == 'apply' }}
      run: |
        terraform apply -auto-approve
      env:
        ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        TF_VAR_ssh_key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        TF_VAR_cloud_id: ${{ secrets.YANDEX_CLOUD_ID }}
        TF_VAR_folder_id: ${{ secrets.YANDEX_FOLDER_ID }}

    - name: Set output IP Address
      id: tf-output-ip
      working-directory: ./infra
      if: ${{ github.event.inputs.action == 'apply' }}
      run: |
        echo "ip_address=$(terraform output -raw vm_1_address)" >> $GITHUB_OUTPUT
      env:
        ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        TF_VAR_ssh_key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        TF_VAR_cloud_id: ${{ secrets.YANDEX_CLOUD_ID }}
        TF_VAR_folder_id: ${{ secrets.YANDEX_FOLDER_ID }}

    - name: Terraform Destroy
      working-directory: ./infra
      if: ${{ github.event.inputs.action == 'destroy' }}
      run: terraform destroy -auto-approve
      env:
        ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        TF_VAR_ssh_key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        TF_VAR_cloud_id: ${{ secrets.YANDEX_CLOUD_ID }}
        TF_VAR_folder_id: ${{ secrets.YANDEX_FOLDER_ID }}

    
  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    if: ${{ needs.terraform.result == 'success' && github.event.inputs.action == 'apply' }}
    
    steps:
    - name: Run Deploy Workflow
      uses: ./.github/workflows/deploy.yml
      with:
        server_host: ${{ needs.terraform.outputs.ip_address }}